# [PackageDev] target_format: plist, ext: tmLanguage
name: High Level SL
scopeName: source.hlsl
fileTypes: [hlsl, fxh, compute, shader]
uuid: 79f67826-5bc3-4067-a1d5-46e7ffe52919

patterns:
- name: comment.line.double-slash.hlsl
  begin: //
  end: $

- name: comment.line.double-slash.hlsl
  begin: //
  end: $

- name: comment.line.multline.hlsl
  begin: /\*
  end: \*/

- comment: Numeric constants
  name: constant.numeric.hlsl
  match: \b(0[xX][0-9a-fA-F]+([lLuU])?)|\b([0-9]+\.?[0-9]*([fFhHlLuU])?)|(\.[0-9]+([fFhHlL])?)\b

- comment: Language constants
  name: constant.language.hlsl
  match: \b(false|FALSE|NULL|true|TRUE)\b

- comment: Preprocessor directives
  name: keyword.control.hlsl
  match: ^\s*#\s*(define|elif|else|endif|error|if|ifdef|ifndef|include|line|pragma|undef)\b

- comment: Preprocessor functions
  name: keyword.control.functions.hlsl
  match: \b(defined)\b

- comment: Basic control keywords
  name: keyword.control.hlsl
  match: \b(break|case|continue|default|discard|do|else|for|goto|if|return|switch|while)\b

- comment: Variable modifiers
  name: keyword.modifier.hlsl
  match: \b(in|out|inout|extern|nointerpolation|precise|shared|groupshared|static|uniform|volatile|const|row_major|column_major)\b

- comment: Primitive geometry types
  name: storage.modifier.primitive.hlsl
  match: \b(point|line|triangle|lineadj|triangleadj)\b

- comment: Geometry stream types
  name: storage.modifier.stream.hlsl
  match: \b(PointStream|LineStream|TriangleStream)\b

- comment: Semantics
  name: keyword.semantics.hlsl
  match: (?<=:)\s*(((BINORMAL|BLENDINDICIES|BLENDWEIGHT|COLOR|DEPTH|NORMAL|POSITION|POSITIONT|PSIZE|TANGENT|TEXCOORD|FOG|TESSFACTOR|VFACE|VPOS|SV_(DEPTH|POSITION|TARGET|Depth|Position|Target|ClipDistance|CullDistance|Coverage|Depth|DepthGreaterEqual|DepthLessEqual|DispatchThreadID|DomainLocation|GroupID|GroupIndex|GroupThreadID|GSInstanceID|InnerCoverage|InsideTessFactor|InstanceID|IsFrontFace|OutputControlPointID|Position|PrimitiveID|RenderTargetArrayIndex|SampleIndex|StencilRef|Target|TessFactor|VertexID|ViewportArrayIndex))((1[0-5]|[0-9]))?)\b|register|packoffset)
  newVersion: (?#In-case I ever need this)(?<=:)\s*([a-zA-Z0-9_]+)\b

- comment: String
  name: string.double.hlsl
  match: '"(?:[^"\\]|\\.)*"'

- comment: Basic types
  name: storage.type.scalar.hlsl
  match: \b(bool|double|dword|float|half|int|min10float|min16float|min12int|min16int|min16uint|struct|uint|void|cbuffer|tbuffer|vector|matrix|string)\b

- comment: Vector forms of scalar types
  name: storage.type.vector.hlsl
  match: \b(double|float|half|int|uint|min10float|min16float|min12int|min16int|min16uint)[1-4]\b

- comment: Componenets of vectors
  name: storage.type.access.hlsl
  match: (?<=\.)([rgba]{1,4}|[xzyw]{1,4})\b

- comment: Matrix forms of scalar types
  name: storage.type.matrix.hlsl
  match: \b(double|float|half|int|uint|min10float|min16float|min12int|min16int|min16uint)[1-4]x[1-4]\b

- comment: Float type modifier
  name: keyword.modifier.float.hlsl
  match: \b(snorm|unorm)\b

- comment: Typedef
  name: keyword.other.typedef.hlsl
  match: \b(typedef)\b

- comment: Sampler types
  name: storage.type.sampler.hlsl
  match: \b(sampler|sampler1D|sampler2D|sampler3D|SamplerComparisonState|samplerCUBE|sampler_state|SamplerState)\b

- comment: Attributes
  name: keyword.attribute.hlsl
  match: \b(maxvertexcount|domain|earlydepthstencil|instance|maxtessfactor|numthreads|outputcontrolpoints|outputtopology|partitioning|patchconstantfunc|fastopt|loop|unroll|allow_uav_condition|branch|flatten|forcecase|call)\b

- comment: Attributes
  name: constant.language.attribute.hlsl
  match: (?<=\()\s*(tri|quad|isoline|point|line|triangle_cw|triangle_ccw|integer|fractional_even|fractional_odd|pow2)\b\s*(?=\))

- comment: Direct3D 9 Texture keyword
  name: keyword.sampler.texture.hlsl
  match: \b(Texture)\b

- comment: Sampler state members
  name: variable.other.sampler.state.hlsl
  match: \b(AddressU|AddressV|AddressW|BorderColor|Filter|MaxAnisotropy|MaxLOD|MinLOD|MipLODBias)\b

- comment: Sampler comparison state members
  name: variable.other.sampler-comparison.state.hlsl
  match: \b(ComparisonFunc|ComparisonFilter)\b

- comment: State variables
  name: support.constant.state.hlsl
  match: \b(AB_BLENDFACTOR|AB_SAMPLEMASK|AddressU|AddressV|AddressW|AlphaBlendEnable|AlphaFunc|AlphaRef|AlphaTestEnable|AlphaToCoverageEnable|Ambient|AmbientMaterialSource|AntialiasedLineEnable|BackStencilFail|BackStencilFunc|BackStencilPass|BackStencilZFail|BlendEnable|BlendOp|BlendOpAlpha|BlendState|BorderColor|Clipping|ClipPlaneEnable|ColorVertex|ColorWriteEnable|ComparisonFunc|CullMode|DepthBias|DepthBiasClamp|DepthEnable|DepthFunc|DepthStencilState|DepthWriteMask|DestBlend|DestBlendAlpha|DiffuseMaterialSource|DitherEnable|DS_STENCILREF|EmissiveMaterialSource|FillMode|Filter|FogColor|FogDensity|FogEnable|FogEnd|FogStart|FogTableMode|FogVertexMode|FrontCounterClockwise|FrontStencilFail|FrontStencilFunc|FrontStencilPass|FrontStencilZFail|GeometryShader|IndexedVertexBlendEnable|LastPixel|LightAmbient|LightAttenuation[0-2]|LightDiffuse|LightDirection|LightEnable|LightFalloff|Lighting|LightPhi|LightPosition|LightRange|LightSpecular|LightTheta|LightType|LocalViewer|MagFilter|MaterialAmbient|MaterialDiffuse|MaterialEmissive|MaterialPower|MaterialSpecular|MaxAnisotropy|MaxLOD|MaxMipLevel|MinFilter|MinLOD|MipFilter|MipLODBias|MipMapLodBias|MultiSampleAntialias|MultisampleEnable|MultiSampleMask|NormalizeNormals|PatchSegments|PixelShader|PointScale|PointScaleEnable|PointSize|PointSpriteEnable|RangeFogEnable|RasterizerState|RenderTargetWriteMask|ScissorEnable|ShadeMode|SlopeScaledDepthBias|SlopeScaleDepthBias|SpecularEnable|SpecularMaterialSource|SrcBlend|SrcBlendAlpha|SRGBTexture|StencilEnable|StencilFail|StencilFunc|StencilMask|StencilPass|StencilReadMask|StencilRef|StencilWriteMask|StencilZFail|TextureFactor|TweenFactor|VertexBlend|VertexShader|Wrap([0-9]|1[0-5])|ZClipEnable)\b

- comment: Language constants
  name: constant.language.hlsl
  match: \b([0-3]WEIGHTS|ADD|ALWAYS|ANISOTROPIC|BLENDFACTOR|BORDER|BOTHINVSRCALPHA|BOTHSRCALPHA|CCW|CLAMP|COLOR1|COLOR2|CONVOLUTIONMONO|CW|DECR|DECRSAT|DESTALPHA|DESTCOLOR|DIRECTIONAL|DISABLE|EQUAL|EXP|EXP2|FALSE|FLAT|GAUSSIANQUAD|GOURAUD|GREATER|GREATEREQUAL|INCR|INCRSAT|INVBLENDFACTOR|INVDESTALPHA|INVDESTCOLOR|INVERT|INVSRCALPHA|INVSRCCOLOR|INVSRCCOLOR2|KEEP|LESS|LESSEQUAL|LINEAR|MATERIAL|MAX|MIN|MIRROR|MIRRORONCE|NEVER|NONE|NOTEQUAL|NULL|ONE|PHONG|POINT|PYRAMIDALQUAD|REPLACE|REVSUBTRACT|SOLID|SPOT|SRCALPHA|SRCALPHASAT|SRCCOLOR|SRCCOLOR2|SUBTRACT|TRUE|TWEENING|TWOSIDED|USEW|WIREFRAME|WRAP|ZERO)\b

- comment: Shader models
  name: support.type.model.hlsl
  match: \b(ps_1_[1-4]|vs_1_1|(ps|vs)_2_([0ab]|sw)|x?[pv]s_3_0|[gpv]s_4_[01]|[cpgv]s_(4_0|4_1|5_0)|ds_5_0)\b

- comment: Texture types
  name: storage.type.texture.hlsl
  match: \b(texture|Texture1D|Texture1DArray|Texture2D|Texture2DArray|Texture3D|TextureCube)\b

- comment: Intrinsic functions
  name: keyword.function.intrinsic.hlsl
  match: \b(abort|abs|acos|all|AllMemoryBarrier|AllMemoryBarrierWithGroupSync|any|asdouble|asfloat|asin|asint|asuint|atan|atan2|ceil|clamp|clip|cos|cosh|countbits|cross|D3DCOLORtoUBYTE4|ddx|ddx_coarse|ddx_fine|ddy|ddy_coarse|ddy_fine|degrees|determinant|DeviceMemoryBarrier|DeviceMemoryBarrierWithGroupSync|distance|dot|dst|errorf|EvaluateAttributeAtCentroid|EvaluateAttributeAtSample|EvaluateAttributeSnapped|exp|exp2|f16tof32|f32tof16|faceforward|firstbithigh|firstbitlow|floor|fma|fmod|frac|frexp|fwidth|GetRenderTargetSampleCount|GetRenderTargetSamplePosition|GroupMemoryBarrier|GroupMemoryBarrierWithGroupSync|InterlockedAdd|InterlockedAnd|InterlockedCompareExchange|InterlockedCompareStore|InterlockedExchange|InterlockedMax|InterlockedMin|InterlockedOr|InterlockedXor|isfinite|isinf|isnan|ldexp|length|lerp|lit|log|log10|log2|mad|max|min|modf|msad4|mul|noise|normalize|pow|printf|Process2DQuadTessFactorsAvg|Process2DQuadTessFactorsMax|Process2DQuadTessFactorsMin|ProcessIsolineTessFactors|ProcessQuadTessFactorsAvg|ProcessQuadTessFactorsMax|ProcessQuadTessFactorsMin|ProcessTriTessFactorsAvg|ProcessTriTessFactorsMax|ProcessTriTessFactorsMin|radians|rcp|reflect|refract|reversebits|round|rsqrt|saturate|sign|sin|sincos|sinh|smoothstep|sqrt|step|tan|tanh|tex1D|tex1Dbias|tex1Dgrad|tex1Dlod|tex1Dproj|tex2D|tex2Dbias|tex2Dgrad|tex2Dlod|tex2Dproj|tex3D|tex3Dbias|tex3Dgrad|tex3Dlod|tex3Dproj|texCUBE|texCUBEbias|texCUBEgrad|texCUBElod|texCUBEproj|transpose|trunc)\b

- comment: Function declaration
  name: entity.name.function.hlsl
  match: (\b([a-zA-Z0-9_]+)\b)(?=\s*\()

- comment: Structure declaration
  name: entity.name.struct.hlsl
  match: (?<=(struct))[^\S\r\n]*([a-zA-Z0-9_]+)\b

- comment: Buffer declaration
  name: entity.name.buffer.hlsl
  match: (?<=[ct]buffer)[^\S\r\n]*([a-zA-Z0-9_]+)\b

- comment: Macro
  name: entity.name.macro.hlsl
  match: ((?<=#(ifdef|undef))|(?<=#(ifndef|define))|(?<=defined\()|(?<=defined\s\())[^\S\r\n\)]*([a-zA-Z0-9_]+)\b

- comment: Semantic macro
  name: entity.name.semantic-macro.hlsl
  match: (?<=:)\s*[a-zA-Z_]+[a-zA-Z0-9_]*\b

- comment: Pragma command
  name: keyword.function.pragma.hlsl
  match: (?<=#pragma)\s*(def|message|pack_matrix|warning)\b

- comment: Illegal pragma command
  name: invalid.illegal.pragma.hlsl
  match: (?<=#pragma)(?!.*(def|message|pack_matrix|warning)).+

- comment: Type macro
  name: entity.name.macro-type.hlsl
  match: ^\s*(?!(const|return|snorm|typedef|unorm|((vector|matrix|(bool|double|float|half|int|uint)([1-4](x[1-4])?)?|(min16(float|int|uint))|min10float|min12int)\b)))[a-zA-Z0-9_]+\s+(?=[a-zA-Z0-9_]+)

- comment: Geometry stream type macro
  name: storage.modifier.stream.hlsl
  match: \b(PointStream|LineStream|TriangleStream)\b

- comment: Geometry stream object type
  name: variable.parameter.streamobject.hlsl
  match: (?<=[<])(\b[a-zA-Z0-9_]+\b)(?=[>])
